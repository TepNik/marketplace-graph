type Order @entity(immutable: true) {
    id: Bytes! # order id
    sellerAddress: Bytes!
    buyerAddress: Bytes!

    # token to get
    tokenToGetType: TokenType!
    tokenToGetAddress: Bytes!
    tokenToGetId: BigInt!
    tokenToGetAmount: BigInt!
    # token to give
    tokenToGiveType: TokenType!
    tokenToGiveAddress: Bytes!
    tokenToGiveId: BigInt!
    tokenToGiveAmount: BigInt!

    deadline: BigInt!
    closeDate: BigInt!

    usdVolume: BigDecimal!
}

type NftToken @entity {
    id: Bytes! # nft address

    nftType: TokenType!

    orders: [Order!]!
}

type OrderRangeData @entity {
    id: ID! # rangeType + '-' + intervalNumber

    rangeType: DataRange!
    intervalNumber: BigInt!

    totalOrders: Int!
    totalVolumeUsd: BigDecimal!
}

type NftTokenRangeData @entity {
    id: ID! # tokenAddress + '-' + rangeType + '-' + intervalNumber

    rangeType: DataRange!
    intervalNumber: BigInt!

    nftToken: NftToken!

    totalOrders: Int!
    totalVolumeUsd: BigDecimal!
}

enum TokenType {
    ERC20
    ERC721
    ERC1155
}

enum DataRange {
    ALL_TIME,
    HOURLY,
    DAILY,
    WEEKLY,
    MONTHLY,
    YEARLY
}